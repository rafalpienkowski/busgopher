name: Draft/Prerelease - Build and Release

on:
  workflow_dispatch:
    inputs:
      draft_release:
        description: 'Mark release as a draft'
        required: true
        default: 'true' 
      prerelease:
        description: 'Mark release as prerelease'
        required: true
        default: 'true' 

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        go-version: [1.23]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}

      - name: Build binary
        run: |
          go build -o busgopher-${{ matrix.os }}-amd64

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: busgopher-${{ matrix.os }}-amd64
          path: busgopher-${{ matrix.os }}-amd64

  release:
    needs: build
    name: Create GitHub Release
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
      issues: write

    steps:
      - name: Download artifacts from build jobs
        uses: actions/download-artifact@v3
        with:
          path: ./artifacts

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref }}  
          artifacts: "./artifacts/**"
          token: ${{ secrets.GITHUB_TOKEN }}
          name: Release ${{ github.ref_name }}
          body: |
            Release notes for ${{ github.ref_name }}.
          draft: ${{ github.event.inputs.draft_release }}
          prerelease: ${{ github.event.inputs.prerelease }} 

